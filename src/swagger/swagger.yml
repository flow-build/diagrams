openapi: '3.0.0'
info:
  version: 0.0.1
  title: Diagrams API
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /token:
    get:
      tags:
        - token
      summary: Generate a new token
      description: Generate a new token that grants access do Diagrams API methods

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwtToken:
                    type: string
              example: { 'jwtToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Fzyj62HwBhH2bNZkd9x1fd2s8TIuzUO8JmDMLAcPALY' }
        '500':
          description: Internal Server Error
  /diagrams:
    post:
      tags:
      - diagrams
      summary: Save new diagram
      description: >
        Create a new diagram
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Diagram name
                workflow_id:
                  type: string
                  format: uuid
                  description: Id of diagram workflow
                user_id:
                  type: string
                  description: Id of user that made the diagram
                diagram_xml:
                  type: xml
                  description: Diagram xml
              required:
                - name
                - diagram_xml
                - user_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  user_id:
                    type: string
                  workflow_id:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              example:
                {
                  "id": "9d99e4a3-1820-4893-b5d9-2f7115c490b1",
                  "name": "Example Number 1",
                  "user_id": "0",
                  "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca9",
                  "created_at": "2022-08-23T19:36:37.804Z",
                  "updated_at": "2022-08-23T19:36:37.804Z"
                }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid Request Body",
                  "error": [
                    {
                        "field": "",
                        "message": "must have required property 'name'"
                    }
                  ]
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    get:
      tags:
      - diagrams
      summary: Get all diagrams
      description: >
        Get all diagrams from server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    user_id:
                      type: string
                    workflow_id:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
              example:
                [
                  {
                    "id": "0f1a4516-c43f-4d03-8ffe-3c020be982cc",
                    "name": "First Example",
                    "user_id": "1",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T19:28:19.024Z",
                    "updated_at": "2022-08-23T19:28:32.693Z"
                  },
                  {
                    "id": "0930048b-2cf7-4de9-ac4d-65f6c2afa016",
                    "name": "Second Example",
                    "user_id": "2",
                    "workflow_id": null,
                    "created_at": "2022-08-23T15:13:26.869Z",
                    "updated_at": "2022-08-23T16:03:49.115Z"
                  },
                ]
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error 
  /diagrams/{id}:
    get:
      tags:
      - diagrams
      summary: Get diagram by id
      description: >
        Get a specific diagram xml by the diagram id
      parameters:
        - in: path
          name: id
          description: Diagram id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/html; charset=utf-8:
              example: <?xml version="1.0" encoding="UTF-8"?><bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" xmlns:color="http://www.omg.org/spec/BPMN/non-normative/color/1.0" xmlns:di="http://www.omg.org/spec/DD/20100524/DI"><bpmn:process id="Global_Process" isExecutable="true"><bpmn:laneSet id="Global_LaneSet"><bpmn:lane id="Lane_anyone" name="anyone"><bpmn:flowNodeRef>Node_START</bpmn:flowNodeRef><bpmn:flowNodeRef>Node_BAG</bpmn:flowNodeRef><bpmn:flowNodeRef>Node_END</bpmn:flowNodeRef></bpmn:lane></bpmn:laneSet><bpmn:startEvent xmlns:custom="http://custom/ns" id="Node_START" name="Start Example" custom:parameters="{&#39;timeout&#39;:100,&#39;input_schema&#39;:{}}"><bpmn:outgoing>Flow_START_BAG</bpmn:outgoing></bpmn:startEvent><bpmn:serviceTask xmlns:custom="http://custom/ns" id="Node_BAG" name="Set to bag" custom:parameters="{&#39;input&#39;:{&#39;user_id&#39;:&#39;1&#39;}}" custom:category="settobag"><bpmn:incoming>Flow_START_BAG</bpmn:incoming><bpmn:outgoing>Flow_BAG_END</bpmn:outgoing></bpmn:serviceTask><bpmn:endEvent xmlns:custom="http://custom/ns" id="Node_END" name="END" custom:parameters="{}"><bpmn:incoming>Flow_BAG_END</bpmn:incoming></bpmn:endEvent><bpmn:sequenceFlow id="Flow_START_BAG" sourceRef="Node_START" targetRef="Node_BAG" /><bpmn:sequenceFlow id="Flow_BAG_END" sourceRef="Node_BAG" targetRef="Node_END" /></bpmn:process><bpmn:collaboration id="Global_Colab" workflowId="gUv_xxzmOJx5lMYzrxYZh"><bpmn:participant id="Global_Actor" name="DIAGRAM_EXAMPLE" processRef="Global_Process" /></bpmn:collaboration><bpmndi:BPMNDiagram id="Global_Diagram"><bpmndi:BPMNPlane id="Global_Plane" bpmnElement="Global_Colab"><bpmndi:BPMNShape id="Node_START_di" bpmnElement="Node_START"><dc:Bounds x="114" y="72" width="36" height="36" /></bpmndi:BPMNShape><bpmndi:BPMNShape id="Node_BAG_di" bpmnElement="Node_BAG" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00"><dc:Bounds x="180" y="50" width="100" height="80" /></bpmndi:BPMNShape><bpmndi:BPMNShape id="Node_END_di" bpmnElement="Node_END"><dc:Bounds x="310" y="72" width="36" height="36" /></bpmndi:BPMNShape><bpmndi:BPMNEdge id="Flow_START_BAG_di" bpmnElement="Flow_START_BAG"><di:waypoint x="150" y="90" /><di:waypoint x="160" y="90" /><di:waypoint x="160" y="90" /><di:waypoint x="180" y="90" /></bpmndi:BPMNEdge><bpmndi:BPMNEdge id="Flow_BAG_END_di" bpmnElement="Flow_BAG_END"><di:waypoint x="280" y="90" /><di:waypoint x="290" y="90" /><di:waypoint x="290" y="90" /><di:waypoint x="310" y="90" /></bpmndi:BPMNEdge><bpmndi:BPMNShape id="Lane_anyone_di" bpmnElement="Lane_anyone"><dc:Bounds x="80" y="10" width="360" height="160" /></bpmndi:BPMNShape><bpmndi:BPMNShape id="Global_Actor_di" bpmnElement="Global_Actor"><dc:Bounds x="50" y="10" width="390" height="160" /></bpmndi:BPMNShape></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></bpmn:definitions>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Diagram not found"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    patch:
      tags:
      - diagrams
      summary: Update a diagram by id
      description: >
        Update a specific diagram by the diagram id
      parameters:
        - in: path
          name: id
          description: Diagram id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Diagram name
                diagram_xml:
                  type: xml
                  description: Diagram xml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  user_id:
                    type: string
                  workflow_id:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              example:
                {
                  "id": "9d99e4a3-1820-4893-b5d9-2f7115c490b1",
                  "name": "Example 1 Updated",
                  "user_id": "0",
                  "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca9",
                  "created_at": "2022-08-23T19:36:37.804Z",
                  "updated_at": "2022-08-23T19:36:37.804Z"
                }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid Request Body",
                  "errors": [
                    {
                      "field": "",
                      "message": "must have required property 'name'"
                    },
                    {
                      "field": "",
                      "message": "must have required property 'diagram_xml'"
                    },
                    {
                      "field": "",
                      "message": "must match a schema in anyOf"
                    },
                    {
                      "field": "",
                      "message": "must pass \"anyRequired\" keyword validation"
                    }
                  ]
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Diagram not found"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      tags:
      - diagrams
      summary: Delete diagram by id
      description: >
        Delete a specific diagram by the diagram id
      parameters:
        - in: path
          name: id
          description: Diagram id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Diagram not found"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /diagrams/user/{id}:
    get:
      tags:
      - diagrams/user
      summary: Get diagrams by user id
      description: >
        Get all diagrams of user by user id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    user_id:
                      type: string
                    workflow_id:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
              example:
                [
                  {
                    "id": "0f1a4516-c43f-4d03-8ffe-3c020be982cc",
                    "name": "Just An Example",
                    "user_id": "1",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T19:28:19.024Z",
                    "updated_at": "2022-08-23T19:28:32.693Z"
                  },
                  {
                    "id": "0930048b-2cf7-4de9-ac4d-65f6c2afa016",
                    "name": "Any Example",
                    "user_id": "1",
                    "workflow_id": null,
                    "created_at": "2022-08-23T15:13:26.869Z",
                    "updated_at": "2022-08-23T16:03:49.115Z"
                  },
                ]
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /diagrams/workflow/{id}:
    get:
      tags:
      - diagrams/workflow
      summary: Get diagrams by workflow id
      description: >
        Get all diagrams of workflow by workflow id
      parameters:
        - in: path
          name: id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    user_id:
                      type: string
                    workflow_id:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
              example:
                [
                  {
                    "id": "0f1a4516-c43f-4d03-8ffe-3c020be982cc",
                    "name": "Some Example",
                    "user_id": "1",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T19:28:19.024Z",
                    "updated_at": "2022-08-23T19:28:32.693Z"
                  },
                  {
                    "id": "0930048b-2cf7-4de9-ac4d-65f6c2afa016",
                    "name": "Another Example",
                    "user_id": "2",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T15:13:26.869Z",
                    "updated_at": "2022-08-23T16:03:49.115Z"
                  },
                ]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /diagrams/workflow/{id}/latest:
    get:
      tags:
      - diagrams/workflow
      summary: Get last diagram by workflow id
      description: >
        Get last created or updated diagram of workflow by workflow id
      parameters:
        - in: path
          name: id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  user_id:
                    type: string
                  workflow_id:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              example:
                {
                  "id": "0f1a4516-c43f-4d03-8ffe-3c020be982cc",
                  "name": "Latest Example",
                  "user_id": "1",
                  "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                  "created_at": "2022-08-23T19:28:19.024Z",
                  "updated_at": "2022-08-23T19:28:32.693Z"
                }
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /diagrams/user/{user_id}/workflow/{workflow_id}:
    get:
      tags:
      - diagrams/user/workflow
      summary: Get diagrams by user id and workflow id
      description: >
        Get all diagrams of user and workflow by user id and workflow id
      parameters:
        - in: path
          name: user_id
          description: User id
          required: true
          schema:
            type: string
        - in: path
          name: workflow_id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    user_id:
                      type: string
                    workflow_id:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
              example:
                [
                  {
                    "id": "0f1a4516-c43f-4d03-8ffe-3c020be982cc",
                    "name": "Somewhat of Example",
                    "user_id": "3",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T19:28:19.024Z",
                    "updated_at": "2022-08-23T19:28:32.693Z"
                  },
                  {
                    "id": "0930048b-2cf7-4de9-ac4d-65f6c2afa016",
                    "name": "Another One",
                    "user_id": "3",
                    "workflow_id": "7be513f4-98dc-43e2-8f3a-66e68a61aca8",
                    "created_at": "2022-08-23T15:13:26.869Z",
                    "updated_at": "2022-08-23T16:03:49.115Z"
                  },
                ]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error